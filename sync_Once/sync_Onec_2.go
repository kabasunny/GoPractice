package main

import (
	"fmt"
	"runtime"
	"sync"
	"time"
)

type Group struct {
	cancel  func()
	errOnce sync.Once
	err     error
	str     string
}

func (g Group) Go2(f func() error) { //強引にポインタ渡しを解除した
	go func() {
		if err := f(); err != nil {
			g.errOnce.Do(func() {
				g.err = err
				if g.cancel != nil {
					g.cancel()
				}
			})
		}
	}()
}

func main() {
	var mem runtime.MemStats
	var wg sync.WaitGroup
	var g Group
	g.str = "ある日、プログラミングの世界に迷い込んだカエルがいました。その名も「Go」。Goは、自分が何者なのかを知りたくて、コードの海を飛び回っていました。「私は何ができるのだろう？」とGoは思いました。そこで彼は、自分がどれだけ速く動けるか試すことにしました。彼は一生懸命にコードを書き始めました。しかし、彼が書いたコードはとても長く、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは思いました。しかし、彼は諦めませんでした。彼は再びコードを書き始めました。今度は、彼が書いたコードはとても短く、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再び思いました。しかし、彼は再び諦めませんでした。彼は再々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々思いました。しかし、彼は再々諦めませんでした。彼は再々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々思いました。しかし、彼は再々々諦めませんでした。彼は再々々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々々思いました。しかし、彼は再々々々諦めませんでした。彼は再々々々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々々々思いました。しかし、彼は再々々々々諦めませんでした。彼は再々々々々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々々々々思いました。しかし、彼は再々々々々々諦めませんでした。彼は再々々々々々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々々々々々思いました。しかし、彼は再々々々々々々諦めませんでした。彼は再々々々々々々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々々々々々々思いました。しかし、彼は再々々々々々々々諦めませんでした。彼は再々々々々々々々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々々々々々々々思いました。しかし、彼は再々々々々々々々々諦めませんでした。彼は再々々々々々々々々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々々々々々々々々思いました。しかし、彼は再々々々々々々々々々諦めませんでした。彼は再々々々々々々々々々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々々々々々々々々々思いました。しかし、彼は再々々々々々々々々々々諦めませんでした。彼は再々々々々々々々々々々々コードを書き始めました。今度は、彼が書いたコードはちょうど良い長さで、彼自身も何を書いているのかわからなくなってしまいました。「これは一体何だろう？」とGoは再々々々々々々々々々々々思いました。しかし、彼は再々々々々々々々々々々々諦めませんでした。彼は再々々々々々々々々々々々々コードを書き始めました。今度は、彼が書いたコードはちょうど..."
	start := time.Now()

	wg.Add(4) //ここでカウント
	g.Go2(func() error {
		defer wg.Done() //各-1カウント
		g.str = "That works!"
		fmt.Println(g.str)
		fmt.Println("That works!")
		g.str = ""
		return nil
	})
	g.Go2(func() error {
		defer wg.Done()
		g.str = "The best!"
		fmt.Println(g.str)
		fmt.Println("The best!")
		g.str = ""
		return nil
	})
	g.Go2(func() error {
		defer wg.Done() //各-1カウント
		g.str = "It's too much fun!"
		fmt.Println(g.str)
		fmt.Println("It's too much fun!")
		g.str = ""
		return nil
	})
	g.Go2(func() error {
		defer wg.Done()
		g.str = "It's going well!"
		fmt.Println(g.str)
		fmt.Println("It's going well!")
		g.str = ""
		return nil
	})
	wg.Wait()
	if g.err != nil {
		fmt.Println("Encountered error:", g.err)
	}

	elapsed := time.Since(start)
	fmt.Printf("Go2処理時間: %s\n", elapsed)

	runtime.ReadMemStats(&mem)
	fmt.Printf("使用メモリ: %v KB\n", mem.Alloc/1024)
}
